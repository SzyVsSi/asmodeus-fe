{"version":3,"file":"apiInitializer-DBqIrgQt.js","sources":["../../node_modules/.pnpm/@tanstack+query-core@5.59.13/node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../node_modules/.pnpm/@tanstack+query-core@5.59.13/node_modules/@tanstack/query-core/build/modern/mutationObserver.js","../../node_modules/.pnpm/@tanstack+react-query@5.59.15_react@18.3.1/node_modules/@tanstack/react-query/build/modern/isRestoring.js","../../node_modules/.pnpm/@tanstack+react-query@5.59.15_react@18.3.1/node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../node_modules/.pnpm/@tanstack+react-query@5.59.15_react@18.3.1/node_modules/@tanstack/react-query/build/modern/utils.js","../../node_modules/.pnpm/@tanstack+react-query@5.59.15_react@18.3.1/node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../node_modules/.pnpm/@tanstack+react-query@5.59.15_react@18.3.1/node_modules/@tanstack/react-query/build/modern/suspense.js","../../node_modules/.pnpm/@tanstack+react-query@5.59.15_react@18.3.1/node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../node_modules/.pnpm/@tanstack+react-query@5.59.15_react@18.3.1/node_modules/@tanstack/react-query/build/modern/useQuery.js","../../node_modules/.pnpm/@tanstack+react-query@5.59.15_react@18.3.1/node_modules/@tanstack/react-query/build/modern/useMutation.js","../../src/core/api/gameSessionsApi.ts","../../src/core/modules/gameSession.ts","../../src/core/api/helpers.ts","../../src/core/modules/createGameSessionsModule.ts","../../src/core/services/fetchService.ts","../../src/core/services/apiInitializer.ts"],"sourcesContent":["// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    if (!this.options.experimental_prefetchInRender) {\n      this.#currentThenable.reject(\n        new Error(\"experimental_prefetchInRender feature flag is not enabled\")\n      );\n    }\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult(notifyOptions);\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    const trackedResult = {};\n    Object.keys(result).forEach((key) => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackProp(key);\n          onPropTracked?.(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    if (options.select && newState.data !== void 0) {\n      if (prevResult && newState.data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(newState.data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    } else {\n      data = newState.data;\n    }\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n        if (options.select && placeholderData !== void 0) {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.#selectError = null;\n          } catch (selectError) {\n            this.#selectError = selectError;\n          }\n        }\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult(notifyOptions) {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const defaultNotifyOptions = {};\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    if (notifyOptions?.listeners !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n    this.#notify({ ...defaultNotifyOptions, ...notifyOptions });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false) {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const context = this.#currentResult.context;\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context);\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context);\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(action.error, variables, context);\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map","\"use client\";\n\n// src/isRestoring.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=isRestoring.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","// src/utils.ts\nfunction shouldThrowError(throwError, params) {\n  if (typeof throwError === \"function\") {\n    return throwError(...params);\n  }\n  return !!throwError;\n}\nfunction noop() {\n}\nexport {\n  noop,\n  shouldThrowError\n};\n//# sourceMappingURL=utils.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"./utils.js\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && shouldThrowError(throwOnError, [result.error, query]);\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  if (defaultedOptions.suspense) {\n    if (defaultedOptions.staleTime === void 0) {\n      defaultedOptions.staleTime = 1e3;\n    }\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1e3);\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./isRestoring.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nimport { noop } from \"./utils.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const client = useQueryClient(queryClient);\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = isRestoring ? () => void 0 : observer.subscribe(notifyManager.batchCalls(onStoreChange));\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, isRestoring]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions, { listeners: false });\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash)\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      if (!observer.hasListeners()) {\n        observer.updateResult();\n      }\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","\"use client\";\n\n// src/useMutation.ts\nimport * as React from \"react\";\nimport { MutationObserver, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { noop, shouldThrowError } from \"./utils.js\";\nfunction useMutation(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  const [observer] = React.useState(\n    () => new MutationObserver(\n      client,\n      options\n    )\n  );\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  const mutate = React.useCallback(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop);\n    },\n    [observer]\n  );\n  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error])) {\n    throw result.error;\n  }\n  return { ...result, mutate, mutateAsync: result.mutate };\n}\nexport {\n  useMutation\n};\n//# sourceMappingURL=useMutation.js.map","import type { FetchService } from '../services/fetchService';\nimport type { ApiGameSession, ApiVerifyCodeResponse } from './types';\n\nexport class GameSessionsApi {\n\tconstructor(private fetchService: FetchService) {}\n\n\tasync getGameSessions() {\n\t\treturn this.fetchService.get<Array<ApiGameSession>>('/asmodeus');\n\t}\n\n\tasync checkValidToken(token: string) {\n\t\treturn this.fetchService.post<ApiVerifyCodeResponse>(\n\t\t\t`/verify-code/${token}`,\n\t\t);\n\t}\n}\n","import type { ApiGameSession } from '../api/types';\n\nexport class GameSession implements ApiGameSession {\n\ttoken: string;\n\troom_one: boolean;\n\troom_two: boolean;\n\troom_three: boolean;\n\n\tconstructor(private gameSession: ApiGameSession) {\n\t\tthis.token = gameSession.token;\n\t\tthis.room_one = gameSession.room_one;\n\t\tthis.room_two = gameSession.room_two;\n\t\tthis.room_three = gameSession.room_three;\n\t}\n\n\tgetRoomStatus(room: 'one' | 'two' | 'three') {\n\t\treturn this.gameSession[`room_${room}`];\n\t}\n}\n","import { GameSession } from '../modules/gameSession';\nimport type { ApiGameSession } from './types';\n\nexport const mapGameSessionsToGameSessionEntity = (\n\tgameSessions: Array<ApiGameSession>,\n) => {\n\treturn gameSessions.map((gameSession) => new GameSession(gameSession));\n};\n","import { useMutation, useQuery } from '@tanstack/react-query';\nimport type { GameSessionsApi } from '../api/gameSessionsApi';\nimport { mapGameSessionsToGameSessionEntity } from '../api/helpers';\nimport type { ApiVerifyCodeResponse } from '../api/types';\n\nexport const createGameSessionsModule = ({\n\tgameSessionsApi,\n}: {\n\tgameSessionsApi: GameSessionsApi;\n}) => {\n\tconst useGetAllGameSessions = () => {\n\t\tconst { data, isLoading, error, refetch } = useQuery({\n\t\t\tqueryKey: ['gameSessions'],\n\t\t\tqueryFn: () =>\n\t\t\t\tgameSessionsApi\n\t\t\t\t\t.getGameSessions()\n\t\t\t\t\t.then(mapGameSessionsToGameSessionEntity),\n\t\t});\n\n\t\treturn {\n\t\t\tdata,\n\t\t\tisLoading,\n\t\t\terror,\n\t\t\trefetch,\n\t\t};\n\t};\n\n\tconst useVerifyCode = () => {\n\t\tconst { mutateAsync, error, isPending } = useMutation<\n\t\t\tApiVerifyCodeResponse,\n\t\t\tError,\n\t\t\tstring\n\t\t>({\n\t\t\tmutationFn: (token) => gameSessionsApi.checkValidToken(token),\n\t\t});\n\n\t\treturn {\n\t\t\tverifyCode: mutateAsync,\n\t\t\terror,\n\t\t\tisPending,\n\t\t};\n\t};\n\n\treturn {\n\t\tuseGetAllGameSessions,\n\t\tuseVerifyCode,\n\t};\n};\n","// biome-ignore lint/suspicious/noExplicitAny: It's okay here\ntype ObjectType = Record<string, any>;\n\ntype FetchServiceOptions = {\n\tlogRequests?: boolean;\n};\n\nexport class FetchService {\n\tprivate apiUrl = 'https://aufzfslpqpjocwztogzo.supabase.co/functions/v1';\n\n\tconstructor(private fetchServiceOptions: FetchServiceOptions) {}\n\n\tget<ReturnType>(url: string) {\n\t\treturn this.request<ReturnType>({\n\t\t\turl,\n\t\t\tparams: { method: 'GET' },\n\t\t});\n\t}\n\n\tput<ReturnType>(url: string, body?: unknown) {\n\t\treturn this.request<ReturnType>({\n\t\t\turl,\n\t\t\tparams: {\n\t\t\t\tbody: JSON.stringify(body),\n\t\t\t\tmethod: 'PUT',\n\t\t\t},\n\t\t});\n\t}\n\n\tpost<ReturnType>(url: string) {\n\t\treturn this.request<ReturnType>({\n\t\t\turl,\n\t\t\tparams: { method: 'POST' },\n\t\t});\n\t}\n\n\tasync request<ReturnType>({\n\t\turl,\n\t\tparams,\n\t}: {\n\t\turl: string;\n\t\tparams?: ObjectType;\n\t}): Promise<ReturnType> {\n\t\tif (!this.apiUrl) {\n\t\t\tthrow new Error('The api url is undefined');\n\t\t}\n\n\t\tconst requestHeader = {\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t};\n\n\t\tif (this.fetchServiceOptions.logRequests) {\n\t\t\tconsole.debug('api request', { url: this.apiUrl + url, params });\n\t\t}\n\n\t\tconst response = await fetch(this.apiUrl + url, {\n\t\t\t...requestHeader,\n\t\t\t...params,\n\t\t});\n\n\t\treturn this.handleResponse(response);\n\t}\n\n\tprivate async handleResponse(res: Response) {\n\t\tif (!res.ok) {\n\t\t\treturn Promise.reject(res);\n\t\t}\n\n\t\tconst text = await res.text();\n\t\ttry {\n\t\t\tconst json = JSON.parse(text);\n\t\t\treturn json;\n\t\t} catch {\n\t\t\treturn text;\n\t\t}\n\t}\n}\n","import { GameSessionsApi } from '../api/gameSessionsApi';\nimport { createGameSessionsModule } from '../modules/createGameSessionsModule';\nimport { FetchService } from './fetchService';\n\nconst fetchService = new FetchService({ logRequests: import.meta.env.DEV });\nconst gameSessionsApi = new GameSessionsApi(fetchService);\n\nexport const gameSessionsModule = createGameSessionsModule({ gameSessionsApi });\n"],"names":["QueryObserver","_a","Subscribable","client","options","__privateAdd","_QueryObserver_instances","_client","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","__privateSet","pendingThenable","__privateGet","shouldFetchOnMount","__privateMethod","executeFetch_fn","updateTimers_fn","shouldFetchOn","clearStaleTimeout_fn","clearRefetchInterval_fn","notifyOptions","prevOptions","prevQuery","resolveEnabled","updateQuery_fn","shallowEqualObjects","mounted","shouldFetchOptionally","resolveStaleTime","updateStaleTimeout_fn","nextRefetchInterval","computeRefetchInterval_fn","updateRefetchInterval_fn","query","result","shouldAssignObserverCurrentProperties","onPropTracked","trackedResult","key","defaultedOptions","fetchOptions","prevResult","prevResultState","prevResultOptions","queryInitialState","state","newState","isPlaceholderData","data","fetchOnMount","fetchOptionally","fetchState","error","errorUpdatedAt","status","replaceData","selectError","placeholderData","isFetching","isPending","isError","isLoading","hasData","nextResult","isStale","finalizeThenableIfPossible","thenable","recreateThenable","pending","prevThenable","defaultNotifyOptions","shouldNotifyListeners","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","notify_fn","promise","noop","staleTime","isServer","isValidTimeout","timeout","timeUntilStale","nextInterval","focusManager","notifyManager","listener","shouldLoadOnMount","field","value","observer","optimisticResult","MutationObserver","_MutationObserver_instances","_currentMutation","_mutateOptions","updateResult_fn","hashKey","action","variables","getDefaultState","context","_b","_d","_c","_f","_e","_h","_g","IsRestoringContext","React.createContext","useIsRestoring","React.useContext","createValue","isReset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","shouldThrowError","throwError","params","ensurePreventErrorBoundaryRetry","errorResetBoundary","useClearResetErrorBoundary","React.useEffect","getHasError","throwOnError","ensureSuspenseTimers","willFetch","isRestoring","shouldSuspend","fetchOptimistic","useBaseQuery","Observer","queryClient","useQueryClient","isNewCacheEntry","React.useState","React.useSyncExternalStore","React.useCallback","onStoreChange","unsubscribe","useQuery","useMutation","mutate","mutateOptions","GameSessionsApi","fetchService","token","GameSession","gameSession","__publicField","room","mapGameSessionsToGameSessionEntity","gameSessions","createGameSessionsModule","gameSessionsApi","refetch","mutateAsync","FetchService","fetchServiceOptions","url","body","requestHeader","response","res","text","gameSessionsModule"],"mappings":"0wBAgBIA,IAAgBC,GAAA,cAAcC,EAAa,CAC7C,YAAYC,EAAQC,EAAS,CAC3B,QAFgBC,EAAA,KAAAC,GAelBD,EAAA,KAAAE,GACAF,EAAA,KAAAG,GACAH,EAAA,KAAAI,GACAJ,EAAA,KAAAK,GACAL,EAAA,KAAAM,GACAN,EAAA,KAAAO,GACAP,EAAA,KAAAQ,GACAR,EAAA,KAAAS,GACAT,EAAA,KAAAU,GACAV,EAAA,KAAAW,GAGAX,EAAA,KAAAY,GACAZ,EAAA,KAAAa,GACAb,EAAA,KAAAc,GACAd,EAAA,KAAAe,GACAf,EAAA,KAAAgB,EAAgC,IAAI,KA5BlC,KAAK,QAAUjB,EACfkB,EAAA,KAAKf,EAAUJ,GACfmB,EAAA,KAAKR,EAAe,MACpBQ,EAAA,KAAKT,EAAmBU,MACnB,KAAK,QAAQ,+BAChBC,EAAA,KAAKX,GAAiB,OACpB,IAAI,MAAM,2DAA2D,CAC7E,EAEI,KAAK,YAAW,EAChB,KAAK,WAAWT,CAAO,CACxB,CAkBD,aAAc,CACZ,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,CACtC,CACD,aAAc,CACR,KAAK,UAAU,OAAS,IAC1BoB,EAAA,KAAKhB,GAAc,YAAY,IAAI,EAC/BiB,GAAmBD,EAAA,KAAKhB,GAAe,KAAK,OAAO,EACrDkB,EAAA,KAAKpB,EAAAqB,GAAL,WAEA,KAAK,aAAY,EAEnBD,EAAA,KAAKpB,EAAAsB,IAAL,WAEH,CACD,eAAgB,CACT,KAAK,gBACR,KAAK,QAAO,CAEf,CACD,wBAAyB,CACvB,OAAOC,GACLL,EAAA,KAAKhB,GACL,KAAK,QACL,KAAK,QAAQ,kBACnB,CACG,CACD,0BAA2B,CACzB,OAAOqB,GACLL,EAAA,KAAKhB,GACL,KAAK,QACL,KAAK,QAAQ,oBACnB,CACG,CACD,SAAU,CACR,KAAK,UAA4B,IAAI,IACrCkB,EAAA,KAAKpB,EAAAwB,IAAL,WACAJ,EAAA,KAAKpB,EAAAyB,IAAL,WACAP,EAAA,KAAKhB,GAAc,eAAe,IAAI,CACvC,CACD,WAAWJ,EAAS4B,EAAe,CACjC,MAAMC,EAAc,KAAK,QACnBC,EAAYV,EAAA,KAAKhB,GAEvB,GADA,KAAK,QAAUgB,EAAA,KAAKjB,GAAQ,oBAAoBH,CAAO,EACnD,KAAK,QAAQ,UAAY,QAAU,OAAO,KAAK,QAAQ,SAAY,WAAa,OAAO,KAAK,QAAQ,SAAY,YAAc,OAAO+B,EAAe,KAAK,QAAQ,QAASX,EAAA,KAAKhB,EAAa,GAAM,UACpM,MAAM,IAAI,MACR,uEACR,EAEIkB,EAAA,KAAKpB,EAAA8B,IAAL,WACAZ,EAAA,KAAKhB,GAAc,WAAW,KAAK,OAAO,EACtCyB,EAAY,YAAc,CAACI,EAAoB,KAAK,QAASJ,CAAW,GAC1ET,EAAA,KAAKjB,GAAQ,cAAe,EAAC,OAAO,CAClC,KAAM,yBACN,MAAOiB,EAAA,KAAKhB,GACZ,SAAU,IAClB,CAAO,EAEH,MAAM8B,EAAU,KAAK,eACjBA,GAAWC,GACbf,EAAA,KAAKhB,GACL0B,EACA,KAAK,QACLD,CACN,GACMP,EAAA,KAAKpB,EAAAqB,GAAL,WAEF,KAAK,aAAaK,CAAa,EAC3BM,IAAYd,EAAA,KAAKhB,KAAkB0B,GAAaC,EAAe,KAAK,QAAQ,QAASX,EAAA,KAAKhB,EAAa,IAAM2B,EAAeF,EAAY,QAAST,EAAA,KAAKhB,EAAa,GAAKgC,EAAiB,KAAK,QAAQ,UAAWhB,EAAA,KAAKhB,EAAa,IAAMgC,EAAiBP,EAAY,UAAWT,EAAA,KAAKhB,EAAa,IACrSkB,EAAA,KAAKpB,EAAAmC,IAAL,WAEF,MAAMC,EAAsBhB,EAAA,KAAKpB,EAAAqC,IAAL,WACxBL,IAAYd,EAAA,KAAKhB,KAAkB0B,GAAaC,EAAe,KAAK,QAAQ,QAASX,EAAA,KAAKhB,EAAa,IAAM2B,EAAeF,EAAY,QAAST,EAAA,KAAKhB,EAAa,GAAKkC,IAAwBlB,EAAA,KAAKJ,KACvMM,EAAA,KAAKpB,EAAAsC,IAAL,UAA4BF,EAE/B,CACD,oBAAoBtC,EAAS,CAC3B,MAAMyC,EAAQrB,EAAA,KAAKjB,GAAQ,cAAa,EAAG,MAAMiB,EAAA,KAAKjB,GAASH,CAAO,EAChE0C,EAAS,KAAK,aAAaD,EAAOzC,CAAO,EAC/C,OAAI2C,GAAsC,KAAMD,CAAM,IACpDxB,EAAA,KAAKZ,EAAiBoC,GACtBxB,EAAA,KAAKV,EAAwB,KAAK,SAClCU,EAAA,KAAKX,EAAsBa,EAAA,KAAKhB,GAAc,QAEzCsC,CACR,CACD,kBAAmB,CACjB,OAAOtB,EAAA,KAAKd,EACb,CACD,YAAYoC,EAAQE,EAAe,CACjC,MAAMC,EAAgB,CAAA,EACtB,cAAO,KAAKH,CAAM,EAAE,QAASI,GAAQ,CACnC,OAAO,eAAeD,EAAeC,EAAK,CACxC,aAAc,GACd,WAAY,GACZ,IAAK,KACH,KAAK,UAAUA,CAAG,EAClBF,GAAA,MAAAA,EAAgBE,GACTJ,EAAOI,CAAG,EAE3B,CAAO,CACP,CAAK,EACMD,CACR,CACD,UAAUC,EAAK,CACb1B,EAAA,KAAKH,GAAc,IAAI6B,CAAG,CAC3B,CACD,iBAAkB,CAChB,OAAO1B,EAAA,KAAKhB,EACb,CACD,QAAQ,CAAE,GAAGJ,CAAS,EAAG,GAAI,CAC3B,OAAO,KAAK,MAAM,CAChB,GAAGA,CACT,CAAK,CACF,CACD,gBAAgBA,EAAS,CACvB,MAAM+C,EAAmB3B,EAAA,KAAKjB,GAAQ,oBAAoBH,CAAO,EAC3DyC,EAAQrB,EAAA,KAAKjB,GAAQ,cAAa,EAAG,MAAMiB,EAAA,KAAKjB,GAAS4C,CAAgB,EAC/E,OAAON,EAAM,MAAO,EAAC,KAAK,IAAM,KAAK,aAAaA,EAAOM,CAAgB,CAAC,CAC3E,CACD,MAAMC,EAAc,CAClB,OAAO1B,EAAA,KAAKpB,EAAAqB,GAAL,UAAmB,CACxB,GAAGyB,EACH,cAAeA,EAAa,eAAiB,EACnD,GAAO,KAAK,KACN,KAAK,aAAY,EACV5B,EAAA,KAAKd,GACb,CACF,CA4DD,aAAamC,EAAOzC,EAAS,QAC3B,MAAM8B,EAAYV,EAAA,KAAKhB,GACjByB,EAAc,KAAK,QACnBoB,EAAa7B,EAAA,KAAKd,GAClB4C,EAAkB9B,EAAA,KAAKb,GACvB4C,EAAoB/B,EAAA,KAAKZ,GAEzB4C,EADcX,IAAUX,EACUW,EAAM,MAAQrB,EAAA,KAAKf,GACrD,CAAE,MAAAgD,CAAO,EAAGZ,EAClB,IAAIa,EAAW,CAAE,GAAGD,GAChBE,EAAoB,GACpBC,EACJ,GAAIxD,EAAQ,mBAAoB,CAC9B,MAAMkC,EAAU,KAAK,eACfuB,EAAe,CAACvB,GAAWb,GAAmBoB,EAAOzC,CAAO,EAC5D0D,EAAkBxB,GAAWC,GAAsBM,EAAOX,EAAW9B,EAAS6B,CAAW,GAC3F4B,GAAgBC,KAClBJ,EAAW,CACT,GAAGA,EACH,GAAGK,GAAWN,EAAM,KAAMZ,EAAM,OAAO,CACjD,GAEUzC,EAAQ,qBAAuB,gBACjCsD,EAAS,YAAc,OAE1B,CACD,GAAI,CAAE,MAAAM,EAAO,eAAAC,EAAgB,OAAAC,CAAM,EAAKR,EACxC,GAAItD,EAAQ,QAAUsD,EAAS,OAAS,OACtC,GAAIL,GAAcK,EAAS,QAASJ,GAAA,YAAAA,EAAiB,OAAQlD,EAAQ,SAAWoB,EAAA,KAAKT,GACnF6C,EAAOpC,EAAA,KAAKR,OAEZ,IAAI,CACFM,EAAA,KAAKP,EAAYX,EAAQ,QACzBwD,EAAOxD,EAAQ,OAAOsD,EAAS,IAAI,EACnCE,EAAOO,GAAYd,GAAA,YAAAA,EAAY,KAAMO,EAAMxD,CAAO,EAClDkB,EAAA,KAAKN,EAAgB4C,GACrBtC,EAAA,KAAKR,EAAe,KACrB,OAAQsD,EAAa,CACpB9C,EAAA,KAAKR,EAAesD,EACrB,MAGHR,EAAOF,EAAS,KAElB,GAAItD,EAAQ,kBAAoB,QAAUwD,IAAS,QAAUM,IAAW,UAAW,CACjF,IAAIG,EACJ,GAAIhB,GAAA,MAAAA,EAAY,mBAAqBjD,EAAQ,mBAAoBmD,GAAA,YAAAA,EAAmB,iBAClFc,EAAkBhB,EAAW,aAE7BgB,EAAkB,OAAOjE,EAAQ,iBAAoB,WAAaA,EAAQ,iBACxEH,GAAAuB,EAAA,KAAKP,KAAL,YAAAhB,GAAgC,MAAM,KACtCuB,EAAA,KAAKP,EACf,EAAYb,EAAQ,gBACRA,EAAQ,QAAUiE,IAAoB,OACxC,GAAI,CACFA,EAAkBjE,EAAQ,OAAOiE,CAAe,EAChD/C,EAAA,KAAKR,EAAe,KACrB,OAAQsD,EAAa,CACpB9C,EAAA,KAAKR,EAAesD,EACrB,CAGDC,IAAoB,SACtBH,EAAS,UACTN,EAAOO,GACLd,GAAA,YAAAA,EAAY,KACZgB,EACAjE,CACV,EACQuD,EAAoB,GAEvB,CACGnC,EAAA,KAAKV,KACPkD,EAAQxC,EAAA,KAAKV,GACb8C,EAAOpC,EAAA,KAAKR,GACZiD,EAAiB,KAAK,MACtBC,EAAS,SAEX,MAAMI,GAAaZ,EAAS,cAAgB,WACtCa,GAAYL,IAAW,UACvBM,GAAUN,IAAW,QACrBO,GAAYF,IAAaD,GACzBI,GAAUd,IAAS,OA4BnBe,EA3BS,CACb,OAAAT,EACA,YAAaR,EAAS,YACtB,UAAAa,GACA,UAAWL,IAAW,UACtB,QAAAM,GACA,iBAAkBC,GAClB,UAAAA,GACA,KAAAb,EACA,cAAeF,EAAS,cACxB,MAAAM,EACA,eAAAC,EACA,aAAcP,EAAS,kBACvB,cAAeA,EAAS,mBACxB,iBAAkBA,EAAS,iBAC3B,UAAWA,EAAS,gBAAkB,GAAKA,EAAS,iBAAmB,EACvE,oBAAqBA,EAAS,gBAAkBF,EAAkB,iBAAmBE,EAAS,iBAAmBF,EAAkB,iBACnI,WAAAc,GACA,aAAcA,IAAc,CAACC,GAC7B,eAAgBC,IAAW,CAACE,GAC5B,SAAUhB,EAAS,cAAgB,SACnC,kBAAAC,EACA,eAAgBa,IAAWE,GAC3B,QAASE,GAAQ/B,EAAOzC,CAAO,EAC/B,QAAS,KAAK,QACd,QAASoB,EAAA,KAAKX,EACpB,EAEI,GAAI,KAAK,QAAQ,8BAA+B,CAC9C,MAAMgE,EAA8BC,GAAa,CAC3CH,EAAW,SAAW,QACxBG,EAAS,OAAOH,EAAW,KAAK,EACvBA,EAAW,OAAS,QAC7BG,EAAS,QAAQH,EAAW,IAAI,CAE1C,EACYI,EAAmB,IAAM,CAC7B,MAAMC,EAAU1D,EAAA,KAAKT,EAAmB8D,EAAW,QAAUpD,MAC7DsD,EAA2BG,CAAO,CAC1C,EACYC,EAAezD,EAAA,KAAKX,GAC1B,OAAQoE,EAAa,OAAM,CACzB,IAAK,UACCpC,EAAM,YAAcX,EAAU,WAChC2C,EAA2BI,CAAY,EAEzC,MACF,IAAK,aACCN,EAAW,SAAW,SAAWA,EAAW,OAASM,EAAa,QACpEF,IAEF,MACF,IAAK,YACCJ,EAAW,SAAW,SAAWA,EAAW,QAAUM,EAAa,SACrEF,IAEF,KACH,CACF,CACD,OAAOJ,CACR,CACD,aAAa3C,EAAe,CAC1B,MAAMqB,EAAa7B,EAAA,KAAKd,GAClBiE,EAAa,KAAK,aAAanD,EAAA,KAAKhB,GAAe,KAAK,OAAO,EAMrE,GALAc,EAAA,KAAKX,EAAsBa,EAAA,KAAKhB,GAAc,OAC9Cc,EAAA,KAAKV,EAAwB,KAAK,SAC9BY,EAAA,KAAKb,GAAoB,OAAS,QACpCW,EAAA,KAAKL,EAA4BO,EAAA,KAAKhB,IAEpC6B,EAAoBsC,EAAYtB,CAAU,EAC5C,OAEF/B,EAAA,KAAKZ,EAAiBiE,GACtB,MAAMO,EAAuB,CAAA,EACvBC,EAAwB,IAAM,CAClC,GAAI,CAAC9B,EACH,MAAO,GAET,KAAM,CAAE,oBAAA+B,CAAmB,EAAK,KAAK,QAC/BC,EAA2B,OAAOD,GAAwB,WAAaA,EAAmB,EAAKA,EACrG,GAAIC,IAA6B,OAAS,CAACA,GAA4B,CAAC7D,EAAA,KAAKH,GAAc,KACzF,MAAO,GAET,MAAMiE,EAAgB,IAAI,IACxBD,GAA4B7D,EAAA,KAAKH,EACzC,EACM,OAAI,KAAK,QAAQ,cACfiE,EAAc,IAAI,OAAO,EAEpB,OAAO,KAAK9D,EAAA,KAAKd,EAAc,EAAE,KAAMwC,GAAQ,CACpD,MAAMqC,EAAWrC,EAEjB,OADgB1B,EAAA,KAAKd,GAAe6E,CAAQ,IAAMlC,EAAWkC,CAAQ,GACnDD,EAAc,IAAIC,CAAQ,CACpD,CAAO,CACP,GACQvD,GAAA,YAAAA,EAAe,aAAc,IAASmD,EAAqB,IAC7DD,EAAqB,UAAY,IAEnCxD,EAAA,KAAKpB,EAAAkF,IAAL,UAAa,CAAE,GAAGN,EAAsB,GAAGlD,CAAe,EAC3D,CAcD,eAAgB,CACd,KAAK,aAAY,EACb,KAAK,gBACPN,EAAA,KAAKpB,EAAAsB,IAAL,UAEH,CAcH,EAnaErB,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YAGAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YA/BkBf,EAAA,YAgKlBqB,EAAa,SAACyB,EAAc,CAC1B1B,EAAA,KAAKpB,EAAA8B,IAAL,WACA,IAAIqD,EAAUjE,EAAA,KAAKhB,GAAc,MAC/B,KAAK,QACL4C,CACN,EACI,OAAKA,GAAA,MAAAA,EAAc,eACjBqC,EAAUA,EAAQ,MAAMC,EAAI,GAEvBD,CACR,EACDhD,GAAmB,UAAG,CACpBf,EAAA,KAAKpB,EAAAwB,IAAL,WACA,MAAM6D,EAAYnD,EAChB,KAAK,QAAQ,UACbhB,EAAA,KAAKhB,EACX,EACI,GAAIoF,IAAYpE,EAAA,KAAKd,GAAe,SAAW,CAACmF,GAAeF,CAAS,EACtE,OAGF,MAAMG,EADOC,GAAevE,EAAA,KAAKd,GAAe,cAAeiF,CAAS,EACjD,EACvBrE,EAAA,KAAKJ,EAAkB,WAAW,IAAM,CACjCM,EAAA,KAAKd,GAAe,SACvB,KAAK,aAAY,CAEpB,EAAEoF,CAAO,EACX,EACDnD,GAAuB,UAAG,CACxB,OAAQ,OAAO,KAAK,QAAQ,iBAAoB,WAAa,KAAK,QAAQ,gBAAgBnB,EAAA,KAAKhB,EAAa,EAAI,KAAK,QAAQ,kBAAoB,EAClJ,EACDoC,GAAsB,SAACoD,EAAc,CACnCtE,EAAA,KAAKpB,EAAAyB,IAAL,WACAT,EAAA,KAAKF,EAA0B4E,GAC3B,EAAAJ,IAAYzD,EAAe,KAAK,QAAQ,QAASX,EAAA,KAAKhB,EAAa,IAAM,IAAS,CAACqF,GAAerE,EAAA,KAAKJ,EAAuB,GAAKI,EAAA,KAAKJ,KAA4B,IAGxKE,EAAA,KAAKH,EAAqB,YAAY,IAAM,EACtC,KAAK,QAAQ,6BAA+B8E,GAAa,UAAS,IACpEvE,EAAA,KAAKpB,EAAAqB,GAAL,UAER,EAAOH,EAAA,KAAKJ,EAAuB,EAChC,EACDQ,GAAa,UAAG,CACdF,EAAA,KAAKpB,EAAAmC,IAAL,WACAf,EAAA,KAAKpB,EAAAsC,IAAL,UAA4BlB,EAAA,KAAKpB,EAAAqC,IAAL,WAC7B,EACDb,GAAkB,UAAG,CACfN,EAAA,KAAKN,KACP,aAAaM,EAAA,KAAKN,EAAe,EACjCI,EAAA,KAAKJ,EAAkB,QAE1B,EACDa,GAAqB,UAAG,CAClBP,EAAA,KAAKL,KACP,cAAcK,EAAA,KAAKL,EAAkB,EACrCG,EAAA,KAAKH,EAAqB,QAE7B,EAwLDiB,GAAY,UAAG,CACb,MAAMS,EAAQrB,EAAA,KAAKjB,GAAQ,cAAe,EAAC,MAAMiB,EAAA,KAAKjB,GAAS,KAAK,OAAO,EAC3E,GAAIsC,IAAUrB,EAAA,KAAKhB,GACjB,OAEF,MAAM0B,EAAYV,EAAA,KAAKhB,GACvBc,EAAA,KAAKd,EAAgBqC,GACrBvB,EAAA,KAAKb,EAA4BoC,EAAM,OACnC,KAAK,iBACPX,GAAA,MAAAA,EAAW,eAAe,MAC1BW,EAAM,YAAY,IAAI,EAEzB,EAOD2C,GAAO,SAACxD,EAAe,CACrBkE,GAAc,MAAM,IAAM,CACpBlE,EAAc,WAChB,KAAK,UAAU,QAASmE,GAAa,CACnCA,EAAS3E,EAAA,KAAKd,EAAc,CACtC,CAAS,EAEHc,EAAA,KAAKjB,GAAQ,cAAe,EAAC,OAAO,CAClC,MAAOiB,EAAA,KAAKhB,GACZ,KAAM,wBACd,CAAO,CACP,CAAK,CACF,EAjbiBP,IAmbpB,SAASmG,GAAkBvD,EAAOzC,EAAS,CACzC,OAAO+B,EAAe/B,EAAQ,QAASyC,CAAK,IAAM,IAASA,EAAM,MAAM,OAAS,QAAU,EAAEA,EAAM,MAAM,SAAW,SAAWzC,EAAQ,eAAiB,GACzJ,CACA,SAASqB,GAAmBoB,EAAOzC,EAAS,CAC1C,OAAOgG,GAAkBvD,EAAOzC,CAAO,GAAKyC,EAAM,MAAM,OAAS,QAAUhB,GAAcgB,EAAOzC,EAASA,EAAQ,cAAc,CACjI,CACA,SAASyB,GAAcgB,EAAOzC,EAASiG,EAAO,CAC5C,GAAIlE,EAAe/B,EAAQ,QAASyC,CAAK,IAAM,GAAO,CACpD,MAAMyD,EAAQ,OAAOD,GAAU,WAAaA,EAAMxD,CAAK,EAAIwD,EAC3D,OAAOC,IAAU,UAAYA,IAAU,IAAS1B,GAAQ/B,EAAOzC,CAAO,CACvE,CACD,MAAO,EACT,CACA,SAASmC,GAAsBM,EAAOX,EAAW9B,EAAS6B,EAAa,CACrE,OAAQY,IAAUX,GAAaC,EAAeF,EAAY,QAASY,CAAK,IAAM,MAAW,CAACzC,EAAQ,UAAYyC,EAAM,MAAM,SAAW,UAAY+B,GAAQ/B,EAAOzC,CAAO,CACzK,CACA,SAASwE,GAAQ/B,EAAOzC,EAAS,CAC/B,OAAO+B,EAAe/B,EAAQ,QAASyC,CAAK,IAAM,IAASA,EAAM,cAAcL,EAAiBpC,EAAQ,UAAWyC,CAAK,CAAC,CAC3H,CACA,SAASE,GAAsCwD,EAAUC,EAAkB,CACzE,MAAK,CAAAnE,EAAoBkE,EAAS,iBAAkB,EAAEC,CAAgB,CAIxE,uBCtdIC,IAAmBxG,GAAA,cAAcC,EAAa,CAKhD,YAAYC,EAAQC,EAAS,CAC3B,QANmBC,EAAA,KAAAqG,GACrBrG,EAAA,KAAAE,GACAF,EAAA,KAAAK,GACAL,EAAA,KAAAsG,GACAtG,EAAA,KAAAuG,GAGEtF,EAAA,KAAKf,EAAUJ,GACf,KAAK,WAAWC,CAAO,EACvB,KAAK,YAAW,EAChBsB,EAAA,KAAKgF,EAAAG,GAAL,UACD,CACD,aAAc,CACZ,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,CAClC,CACD,WAAWzG,EAAS,OAClB,MAAM6B,EAAc,KAAK,QACzB,KAAK,QAAUT,EAAA,KAAKjB,GAAQ,uBAAuBH,CAAO,EACrDiC,EAAoB,KAAK,QAASJ,CAAW,GAChDT,EAAA,KAAKjB,GAAQ,iBAAkB,EAAC,OAAO,CACrC,KAAM,yBACN,SAAUiB,EAAA,KAAKmF,GACf,SAAU,IAClB,CAAO,EAEC1E,GAAA,MAAAA,EAAa,aAAe,KAAK,QAAQ,aAAe6E,GAAQ7E,EAAY,WAAW,IAAM6E,GAAQ,KAAK,QAAQ,WAAW,EAC/H,KAAK,MAAK,IACD7G,EAAAuB,EAAA,KAAKmF,KAAL,YAAA1G,EAAuB,MAAM,UAAW,WACjDuB,EAAA,KAAKmF,GAAiB,WAAW,KAAK,OAAO,CAEhD,CACD,eAAgB,OACT,KAAK,iBACR1G,EAAAuB,EAAA,KAAKmF,KAAL,MAAA1G,EAAuB,eAAe,KAEzC,CACD,iBAAiB8G,EAAQ,CACvBrF,EAAA,KAAKgF,EAAAG,GAAL,WACAnF,EAAA,KAAKgF,EAAAlB,IAAL,UAAauB,EACd,CACD,kBAAmB,CACjB,OAAOvF,EAAA,KAAKd,EACb,CACD,OAAQ,QACNT,EAAAuB,EAAA,KAAKmF,KAAL,MAAA1G,EAAuB,eAAe,MACtCqB,EAAA,KAAKqF,EAAmB,QACxBjF,EAAA,KAAKgF,EAAAG,GAAL,WACAnF,EAAA,KAAKgF,EAAAlB,IAAL,UACD,CACD,OAAOwB,EAAW5G,EAAS,OACzB,OAAAkB,EAAA,KAAKsF,EAAiBxG,IACtBH,EAAAuB,EAAA,KAAKmF,KAAL,MAAA1G,EAAuB,eAAe,MACtCqB,EAAA,KAAKqF,EAAmBnF,EAAA,KAAKjB,GAAQ,iBAAgB,EAAG,MAAMiB,EAAA,KAAKjB,GAAS,KAAK,OAAO,GACxFiB,EAAA,KAAKmF,GAAiB,YAAY,IAAI,EAC/BnF,EAAA,KAAKmF,GAAiB,QAAQK,CAAS,CAC/C,CAoCH,EA3FEzG,EAAA,YACAG,EAAA,YACAiG,EAAA,YACAC,EAAA,YAJqBF,EAAA,YAyDrBG,EAAa,UAAG,OACd,MAAMpD,IAAQxD,EAAAuB,EAAA,KAAKmF,KAAL,YAAA1G,EAAuB,QAASgH,GAAe,EAC7D3F,EAAA,KAAKZ,EAAiB,CACpB,GAAG+C,EACH,UAAWA,EAAM,SAAW,UAC5B,UAAWA,EAAM,SAAW,UAC5B,QAASA,EAAM,SAAW,QAC1B,OAAQA,EAAM,SAAW,OACzB,OAAQ,KAAK,OACb,MAAO,KAAK,KAClB,EACG,EACD+B,GAAO,SAACuB,EAAQ,CACdb,GAAc,MAAM,IAAM,qBACxB,GAAI1E,EAAA,KAAKoF,IAAkB,KAAK,aAAY,EAAI,CAC9C,MAAMI,EAAYxF,EAAA,KAAKd,GAAe,UAChCwG,EAAU1F,EAAA,KAAKd,GAAe,SAChCqG,GAAA,YAAAA,EAAQ,QAAS,YACnBI,GAAAlH,EAAAuB,EAAA,KAAKoF,IAAe,YAApB,MAAAO,EAAA,KAAAlH,EAAgC8G,EAAO,KAAMC,EAAWE,IACxDE,GAAAC,EAAA7F,EAAA,KAAKoF,IAAe,YAApB,MAAAQ,EAAA,KAAAC,EAAgCN,EAAO,KAAM,KAAMC,EAAWE,KACrDH,GAAA,YAAAA,EAAQ,QAAS,WAC1BO,GAAAC,EAAA/F,EAAA,KAAKoF,IAAe,UAApB,MAAAU,EAAA,KAAAC,EAA8BR,EAAO,MAAOC,EAAWE,IACvDM,GAAAC,EAAAjG,EAAA,KAAKoF,IAAe,YAApB,MAAAY,EAAA,KAAAC,EACE,OACAV,EAAO,MACPC,EACAE,GAGL,CACD,KAAK,UAAU,QAASf,GAAa,CACnCA,EAAS3E,EAAA,KAAKd,EAAc,CACpC,CAAO,CACP,CAAK,CACF,EA3FoBT,ICDnByH,GAAqBC,EAAAA,cAAoB,EAAK,EAC9CC,GAAiB,IAAMC,aAAiBH,EAAkB,EACpCA,GAAmB,SCD7C,SAASI,IAAc,CACrB,IAAIC,EAAU,GACd,MAAO,CACL,WAAY,IAAM,CAChBA,EAAU,EACX,EACD,MAAO,IAAM,CACXA,EAAU,EACX,EACD,QAAS,IACAA,CAEb,CACA,CACA,IAAIC,GAAiCL,EAAAA,cAAoBG,GAAW,CAAE,EAClEG,GAA6B,IAAMJ,EAAgB,WAACG,EAA8B,ECnBtF,SAASE,GAAiBC,EAAYC,EAAQ,CAC5C,OAAI,OAAOD,GAAe,WACjBA,EAAW,GAAGC,CAAM,EAEtB,CAAC,CAACD,CACX,CACA,SAASzC,IAAO,CAChB,CCHA,IAAI2C,GAAkC,CAACjI,EAASkI,IAAuB,EACjElI,EAAQ,UAAYA,EAAQ,gBACzBkI,EAAmB,YACtBlI,EAAQ,aAAe,IAG7B,EACImI,GAA8BD,GAAuB,CACvDE,EAAAA,UAAgB,IAAM,CACpBF,EAAmB,WAAU,CACjC,EAAK,CAACA,CAAkB,CAAC,CACzB,EACIG,GAAc,CAAC,CACjB,OAAA3F,EACA,mBAAAwF,EACA,aAAAI,EACA,MAAA7F,CACF,IACSC,EAAO,SAAW,CAACwF,EAAmB,QAAO,GAAM,CAACxF,EAAO,YAAcD,GAASqF,GAAiBQ,EAAc,CAAC5F,EAAO,MAAOD,CAAK,CAAC,ECrB3I8F,GAAwBxF,GAAqB,CAC3CA,EAAiB,WACfA,EAAiB,YAAc,SACjCA,EAAiB,UAAY,KAE3B,OAAOA,EAAiB,QAAW,WACrCA,EAAiB,OAAS,KAAK,IAAIA,EAAiB,OAAQ,GAAG,GAGrE,EACIyF,GAAY,CAAC9F,EAAQ+F,IAAgB/F,EAAO,WAAaA,EAAO,YAAc,CAAC+F,EAC/EC,GAAgB,CAAC3F,EAAkBL,KAAWK,GAAA,YAAAA,EAAkB,WAAYL,EAAO,UACnFiG,GAAkB,CAAC5F,EAAkBoD,EAAU+B,IAAuB/B,EAAS,gBAAgBpD,CAAgB,EAAE,MAAM,IAAM,CAC/HmF,EAAmB,WAAU,CAC/B,CAAC,ECID,SAASU,GAAa5I,EAAS6I,EAAUC,EAAa,eAQ9C,MAAA/I,EAASgJ,GAA0B,EACnCN,EAAcjB,KACdU,EAAqBL,KACrB9E,EAAmBhD,EAAO,oBAAoBC,CAAO,GACpD+G,GAAAlH,EAAAE,EAAA,oBAAoB,UAApB,YAAAF,EAA6B,4BAA7B,MAAAkH,EAAA,KAAAlH,EACLkD,GAEeA,EAAA,mBAAqB0F,EAAc,cAAgB,aACpEF,GAAqBxF,CAAgB,EACrCkF,GAAgClF,EAAkBmF,CAAkB,EACpEC,GAA2BD,CAAkB,EAC7C,MAAMc,EAAkB,CAACjJ,EAAO,cAAgB,EAAA,IAAIgD,EAAiB,SAAS,EACxE,CAACoD,CAAQ,EAAI8C,EAAM,SACvB,IAAM,IAAIJ,EACR9I,EACAgD,CACF,CAAA,EAEIL,EAASyD,EAAS,oBAAoBpD,CAAgB,EAgBxD,GAfEmG,EAAA,qBACJC,EAAM,YACHC,GAAkB,CACX,MAAAC,EAAcZ,EAAc,IAAM,GAAStC,EAAS,UAAUL,GAAc,WAAWsD,CAAa,CAAC,EAC3G,OAAAjD,EAAS,aAAa,EACfkD,CACT,EACA,CAAClD,EAAUsC,CAAW,CACxB,EACA,IAAMtC,EAAS,iBAAiB,EAChC,IAAMA,EAAS,iBAAiB,CAAA,EAElCiC,EAAAA,UAAgB,IAAM,CACpBjC,EAAS,WAAWpD,EAAkB,CAAE,UAAW,EAAO,CAAA,CAAA,EACzD,CAACA,EAAkBoD,CAAQ,CAAC,EAC3BuC,GAAc3F,EAAkBL,CAAM,EAClC,MAAAiG,GAAgB5F,EAAkBoD,EAAU+B,CAAkB,EAEtE,GAAIG,GAAY,CACd,OAAA3F,EACA,mBAAAwF,EACA,aAAcnF,EAAiB,aAC/B,MAAOhD,EAAO,cAAA,EAAgB,IAAIgD,EAAiB,SAAS,CAAA,CAC7D,EACC,MAAML,EAAO,MAOf,IAJOsE,GAAAC,EAAAlH,EAAA,oBAAoB,UAApB,YAAAkH,EAA6B,2BAA7B,MAAAD,EAAA,KAAAC,EACLlE,EACAL,GAEEK,EAAiB,+BAAiC,CAACyC,IAAYgD,GAAU9F,EAAQ+F,CAAW,EAAG,CACjG,MAAMpD,EAAU2D,EAEdL,GAAgB5F,EAAkBoD,EAAU+B,CAAkB,GAG9Df,EAAApH,EAAO,cAAc,EAAE,IAAIgD,EAAiB,SAAS,IAArD,YAAAoE,EAAwD,QAE1D9B,GAAA,MAAAA,EAAS,MAAMC,IAAM,QAAQ,IAAM,CAC5Ba,EAAS,gBACZA,EAAS,aAAa,CACxB,EAEJ,CACA,OAAQpD,EAAiB,oBAAqDL,EAA/ByD,EAAS,YAAYzD,CAAM,CAC5E,CCxFA,SAAS4G,GAAStJ,EAAS8I,EAAa,CACtC,OAAOF,GAAa5I,EAASJ,EAA0B,CACzD,CCAA,SAAS2J,GAAYvJ,EAAS8I,EAAa,CACzC,MAAM/I,EAASgJ,GAA0B,EACnC,CAAC5C,CAAQ,EAAI8C,EAAc,SAC/B,IAAM,IAAI5C,GACRtG,EACAC,CACD,CACL,EACEoI,EAAAA,UAAgB,IAAM,CACpBjC,EAAS,WAAWnG,CAAO,CAC/B,EAAK,CAACmG,EAAUnG,CAAO,CAAC,EACtB,MAAM0C,EAASwG,EAA0B,qBACvCC,EAAiB,YACdC,GAAkBjD,EAAS,UAAUL,GAAc,WAAWsD,CAAa,CAAC,EAC7E,CAACjD,CAAQ,CACV,EACD,IAAMA,EAAS,iBAAkB,EACjC,IAAMA,EAAS,iBAAkB,CACrC,EACQqD,EAASL,EAAiB,YAC9B,CAACvC,EAAW6C,IAAkB,CAC5BtD,EAAS,OAAOS,EAAW6C,CAAa,EAAE,MAAMnE,EAAI,CACrD,EACD,CAACa,CAAQ,CACb,EACE,GAAIzD,EAAO,OAASoF,GAAiB3B,EAAS,QAAQ,aAAc,CAACzD,EAAO,KAAK,CAAC,EAChF,MAAMA,EAAO,MAEf,MAAO,CAAE,GAAGA,EAAQ,OAAA8G,EAAQ,YAAa9G,EAAO,OAClD,CCjCO,MAAMgH,EAAgB,CAC5B,YAAoBC,EAA4B,CAA5B,KAAA,aAAAA,CAA6B,CAEjD,MAAM,iBAAkB,CAChB,OAAA,KAAK,aAAa,IAA2B,WAAW,CAChE,CAEA,MAAM,gBAAgBC,EAAe,CACpC,OAAO,KAAK,aAAa,KACxB,gBAAgBA,CAAK,EAAA,CAEvB,CACD,CCbO,MAAMC,EAAsC,CAMlD,YAAoBC,EAA6B,CALjDC,EAAA,cACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,mBAEoB,KAAA,YAAAD,EACnB,KAAK,MAAQA,EAAY,MACzB,KAAK,SAAWA,EAAY,SAC5B,KAAK,SAAWA,EAAY,SAC5B,KAAK,WAAaA,EAAY,UAC/B,CAEA,cAAcE,EAA+B,CAC5C,OAAO,KAAK,YAAY,QAAQA,CAAI,EAAE,CACvC,CACD,CCfa,MAAAC,GACZC,GAEOA,EAAa,IAAKJ,GAAgB,IAAID,GAAYC,CAAW,CAAC,ECDzDK,GAA2B,CAAC,CACxC,gBAAAC,CACD,KAoCQ,CACN,sBAlC6B,IAAM,CACnC,KAAM,CAAE,KAAA5G,EAAM,UAAAa,EAAW,MAAAT,EAAO,QAAAyG,CAAA,EAAYf,GAAS,CACpD,SAAU,CAAC,cAAc,EACzB,QAAS,IACRc,EACE,gBAAgB,EAChB,KAAKH,EAAkC,CAAA,CAC1C,EAEM,MAAA,CACN,KAAAzG,EACA,UAAAa,EACA,MAAAT,EACA,QAAAyG,CAAA,CACD,EAqBA,cAlBqB,IAAM,CAC3B,KAAM,CAAE,YAAAC,EAAa,MAAA1G,EAAO,UAAAO,CAAA,EAAcoF,GAIxC,CACD,WAAaK,GAAUQ,EAAgB,gBAAgBR,CAAK,CAAA,CAC5D,EAEM,MAAA,CACN,WAAYU,EACZ,MAAA1G,EACA,UAAAO,CAAA,CACD,CAKA,GCtCK,MAAMoG,EAAa,CAGzB,YAAoBC,EAA0C,CAFtDT,EAAA,cAAS,yDAEG,KAAA,oBAAAS,CAA2C,CAE/D,IAAgBC,EAAa,CAC5B,OAAO,KAAK,QAAoB,CAC/B,IAAAA,EACA,OAAQ,CAAE,OAAQ,KAAM,CAAA,CACxB,CACF,CAEA,IAAgBA,EAAaC,EAAgB,CAC5C,OAAO,KAAK,QAAoB,CAC/B,IAAAD,EACA,OAAQ,CACP,KAAM,KAAK,UAAUC,CAAI,EACzB,OAAQ,KACT,CAAA,CACA,CACF,CAEA,KAAiBD,EAAa,CAC7B,OAAO,KAAK,QAAoB,CAC/B,IAAAA,EACA,OAAQ,CAAE,OAAQ,MAAO,CAAA,CACzB,CACF,CAEA,MAAM,QAAoB,CACzB,IAAAA,EACA,OAAAzC,CAAA,EAIuB,CACnB,GAAA,CAAC,KAAK,OACH,MAAA,IAAI,MAAM,0BAA0B,EAG3C,MAAM2C,EAAgB,CACrB,QAAS,CACR,eAAgB,mBAChB,OAAQ,kBACT,CAAA,EAGG,KAAK,oBAAoB,aACpB,QAAA,MAAM,cAAe,CAAE,IAAK,KAAK,OAASF,EAAK,OAAAzC,EAAQ,EAGhE,MAAM4C,EAAW,MAAM,MAAM,KAAK,OAASH,EAAK,CAC/C,GAAGE,EACH,GAAG3C,CAAA,CACH,EAEM,OAAA,KAAK,eAAe4C,CAAQ,CACpC,CAEA,MAAc,eAAeC,EAAe,CACvC,GAAA,CAACA,EAAI,GACD,OAAA,QAAQ,OAAOA,CAAG,EAGpB,MAAAC,EAAO,MAAMD,EAAI,OACnB,GAAA,CAEI,OADM,KAAK,MAAMC,CAAI,CACrB,MACA,CACA,OAAAA,CACR,CACD,CACD,CC3EA,MAAMnB,GAAe,IAAIY,GAAa,CAAE,YAAa,EAAqB,CAAA,EACpEH,GAAkB,IAAIV,GAAgBC,EAAY,EAE3CoB,GAAqBZ,GAAyB,CAAE,gBAAAC,EAAiB,CAAA","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}